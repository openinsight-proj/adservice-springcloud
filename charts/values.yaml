global:
  image:
    pullPolicy: IfNotPresent

adservice:
  enabled: true
  version: 0.0.1
  # Default values for opentelemetry-demo-webstore.
  # This is a YAML-formatted file.
  # Declare variables to be passed into your templates.

  replicaCount: 1

  image:
    repository: ghcr.io/openinsight-proj/adservice
    # Overrides the image tag whose default is the chart appVersion.
    tag: "adservice-v0.0.1"

  imagePullSecrets: []
  nameOverride: "adservice"
  fullnameOverride: "adservice"

  env:
    otelResourceAttrubutes: service.name=adservice
    otelExporter: http://otel-collector.opentelemetry-demo.svc.cluster.local:4317
    nacos_server: nacos-server.opentelemetry-demo.svc.cluster.local:8848
    sentinel_server: sentinel-server.opentelemetry-demo.svc.cluster.local:34001
    javaopts: -Dspring.cloud.nacos.discovery.enabled=true -Dspring.cloud.sentinel.enabled=true

  serviceAccount:
    # Specifies whether a service account should be created
    create: false
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    type: NodePort
    grpcPort: 9555
    httpPort: 8081

  ingress:
    enabled: false

  resources: 
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    limits:
      cpu: 400m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 200Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

nacos:
  enabled: true
  version: 2.1.0
  replicaCount: 1
  image:
    repository: nacos/nacos-server
    tag: "v2.1.0-slim"

  nameOverride: "nacos-server"
  fullnameOverride: "nacos-server"

  service:
    type: NodePort
    httpNodePort: 30903
    grpcNodePort1: 30914
    grpcNodePort2: 30915
    port: 8848
    grpcPort1: 9848
    grpcPort2: 9849

  env:
    #模式 cluster/standalone
    mode: standalone

  resources:
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment tkubhe following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    limits:
      cpu: 400m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 200Mi

sentinel:
  enabled: true
  version: 1.8.4
  replicaCount: 1
  image:
    repository: ghcr.io/openinsight-proj/sentinel
    tag: "sentinel-v1.8.4"

  nameOverride: "sentinel-server"
  fullnameOverride: "sentinel-server"

  service:
    type: NodePort
    httpNodePort: 30924
    port: 34001

  env:
    #模式 cluster/standalone
    javaopts: "-Dserver.port=34001 -Dcsp.sentinel.dashboard.server=0.0.0.0:34001 -Dproject.name=sentinel-dashboard"

  resources:
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment tkubhe following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    limits:
      cpu: 400m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 200Mi

