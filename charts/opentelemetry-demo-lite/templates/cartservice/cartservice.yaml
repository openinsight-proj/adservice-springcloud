{{- if .Values.extensions.cartservice.enabled -}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "otel-demo.name" . }}-cartservice
  labels:
    opentelemetry.io/name: {{ .Release.Name }}-cartservice
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: cartservice
    app.kubernetes.io/name: {{ .Release.Name }}-cartservice
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: cartservice
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/name: {{ .Release.Name }}-cartservice
  template:
    metadata:
      labels:
        opentelemetry.io/name: {{ .Release.Name }}-cartservice
        app.kubernetes.io/component: cartservice
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/name: {{ .Release.Name }}-cartservice
        {{- if .Values.global.opentelemetryDemo.istioSidecar.enabled }}
        sidecar.istio.io/inject: 'true'
        {{- end }}
      annotations:
        instrumentation.opentelemetry.io/inject-sdk: "insight-system/insight-opentelemetry-autoinstrumentation"
    spec:
      containers:
        - name: cartservice
          image: "{{ .Values.extensions.cartservice.image.registry }}/{{ .Values.extensions.cartservice.image.repository }}:{{ .Values.extensions.cartservice.image.tag }}"
          ports:
            - name: service
              containerPort: 8080
              protocol: TCP
          env:
            - name: ASPNETCORE_URLS
              value: http://*:8080
            - name: REDIS_ADDR
              value: '{{ include "redis.addr" . }}'
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: 'http://insight-agent-opentelemetry-collector.insight-system.svc.cluster.local:4317'
            - name: CART_SERVICE_PORT
              value: '8080'
          resources:
            requests:
              cpu: "0.2"
              memory: 100Mi
            limits:
              cpu: "0.5"
              memory: 160Mi
      initContainers:
        - command:
            - sh
            - -c
            - until nc -z -v -w30 {{ include "redis.addr" . }}; do echo waiting
              for redis; sleep 2; done;
          image: "{{ .Values.extensions.cartservice.busyboxImage.registry }}/{{ .Values.extensions.cartservice.busyboxImage.repository }}:{{ .Values.extensions.cartservice.busyboxImage.tag }}"
          name: wait-for-redis
          resources:
            requests:
              cpu: "0.2"
              memory: 100Mi
            limits:
              cpu: "0.5"
              memory: 160Mi
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "otel-demo.name" . }}-cartservice
  labels:
    {{- include "otel-demo.labels" . | nindent 4 }}
spec:
  type: ClusterIP
  ports:
    - name: service
      protocol: TCP
      port: 8080
      targetPort: 8080
  selector:
    opentelemetry.io/name: {{ .Release.Name }}-cartservice
{{- end }}