global:
  serviceMonitor:
    adservice:
      enabled: true
    dataservice:
      enabled: true

extensions:
  mysql:
    enabled: true
  dataservice:
    enabled: true
    image:
      repository: ghcr.io/openinsight-proj/demo
      tag: "993ff3d8b4548b4da08c4fb748dced2bdd20ba43-dataservice"
      pullPolicy: Always
    servcie:
      type: NodePort
    ports:
      - name: http
        containerPort: 8080
        protocol: TCP
      - name: health-http
        containerPort: 8999
        protocol: TCP
      - name: jvm-metrics
        containerPort: 9464
        protocol: TCP
    env:
      - name: OTEL_EXPORTER_OTLP_ENDPOINT
        value: 'http://insight-agent-opentelemetry-collector.insight-system.svc.cluster.local:4317'
      - name: NACOS_NAMESPACE_ID
        value: public
      - name: NACOS_GROUP_NAME
        value: DEFAULT_GROUP
      - name: SKOALA_REGISTRY
        value: nacos-test
      - name: OTEL_RESOURCE_ATTRIBUTES
        value: >-
          k8s.namespace.name=$(K8S_NAMESPACE),k8s.node.name=$(OTEL_RESOURCE_ATTRIBUTES_NODE_NAME),k8s.pod.name=$(OTEL_RESOURCE_ATTRIBUTES_POD_NAME),k8s.pod.uid=$(OTEL_RESOURCE_ATTRIBUTES_POD_UID),skoala.registry=$(SKOALA_REGISTRY),nacos.namespaceid=$(NACOS_NAMESPACE_ID),nacos.groupname=$(NACOS_GROUP_NAME)
      - name: JAVA_OPTS
        value: "-XX:MetaspaceSize=512m -XX:MaxMetaspaceSize=512m -Dotel.metrics.exporter=prometheus -Dotel.exporter.prometheus.port=9464 -Dspring.extraAdLabel=Daocloud -Dspring.matrixRow=200 -Dmeter.port=8888 -Dspring.cloud.nacos.discovery.enabled=false -Dspring.cloud.nacos.config.enabled=false -Dspring.cloud.sentinel.enabled=false -Dspring.cloud.nacos.config.server-addr=nacos-test.skoala-test:8848 -Dspring.application.name=adservice-springcloud -Dspring.cloud.nacos.discovery.server-addr=nacos-test.skoala-test:8848 -Dspring.cloud.nacos.discovery.namespace=$(NACOS_NAMESPACE_ID) -Dspring.cloud.nacos.discovery.group=$(NACOS_GROUP_NAME) -Dspring.cloud.nacos.discovery.metadata.k8s_cluster_id=xxx -Dspring.cloud.nacos.discovery.metadata.k8s_cluster_name=skoala-dev -Dspring.cloud.nacos.discovery.metadata.k8s_namespace_name=skoala-test -Dspring.cloud.nacos.discovery.metadata.k8s_workload_type=deployment -Dspring.cloud.nacos.discovery.metadata.k8s_workload_name=adservice-springcloud -Dspring.cloud.nacos.discovery.metadata.k8s_service_name=adservice-springcloud -Dspring.cloud.nacos.discovery.metadata.k8s_pod_name=$(HOSTNAME)  -Dspring.cloud.sentinel.transport.dashboard=nacos-test-sentinel.skoala-test:8080"
    podAnnotations:
      instrumentation.opentelemetry.io/inject-sdk: "insight-system/insight-opentelemetry-autoinstrumentation"
      insight.opentelemetry.io/metric-scrape: "true"
      insight.opentelemetry.io/metric-path: "/"
      insight.opentelemetry.io/metric-port: "9464"
  frontendNodePortSvc:
    enabled: true
  cartservice:
    enabled: true

opentelemetry-demo:
  enabled: true

  default:
    image:
      repository: ghcr.io/openinsight-proj/demo
      tag: "v1.4.0-beta-daocloud"

  serviceAccount:
    create: false

  components:
    adService:
      enabled: true
      useDefault:
        env: false
      imageOverride:
        tag: "ce8efa5113e52421612cae34e76875fd4a95ace1-adservice-v2"
      ports:
        - name: http
          value: 8081
        - name: health-http
          value: 8999
        - name: metrics
          value: 12345
        - name: http-metrics
          value: 8888
        - name: jvm-metrics
          value: 9464
      env:
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          value: 'http://insight-agent-opentelemetry-collector.insight-system.svc.cluster.local:4317'
        - name: AD_SERVICE_PORT
          value: "8080"
        - name: NACOS_NAMESPACE_ID
          value: public
        - name: NACOS_GROUP_NAME
          value: DEFAULT_GROUP
        - name: SKOALA_REGISTRY
          value: nacos-test
        - name: DATA_SERVICE_ADDR
          value: '{{ include "otel-demo.name" . }}-dataservice:8080'
        - name: K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: OTEL_RESOURCE_ATTRIBUTES
          value: k8s.namespace.name=$(K8S_NAMESPACE),k8s.node.name=$(OTEL_RESOURCE_ATTRIBUTES_NODE_NAME),k8s.pod.name=$(OTEL_RESOURCE_ATTRIBUTES_POD_NAME),k8s.pod.uid=$(OTEL_RESOURCE_ATTRIBUTES_POD_UID),skoala.registry=$(SKOALA_REGISTRY),nacos.namespaceid=$(NACOS_NAMESPACE_ID),nacos.groupname=$(NACOS_GROUP_NAME)
        - name: JAVA_OPTS
          value: "-XX:MetaspaceSize=512m -XX:MaxMetaspaceSize=512m -Dotel.metrics.exporter=prometheus -Dotel.exporter.prometheus.port=9464 -javaagent:./jmx_prometheus_javaagent-0.17.0.jar=12345:./prometheus-jmx-config.yaml -Dspring.dataService.enabled=true -Dspring.extraAdLabel=Daocloud -Dspring.randomError=false -Dspring.matrixRow=200 -Dmeter.port=8888 -Dspring.cloud.nacos.discovery.enabled=false -Dspring.cloud.nacos.config.enabled=false -Dspring.cloud.sentinel.enabled=false -Dspring.cloud.nacos.config.server-addr=nacos-test.skoala-test:8848 -Dspring.cloud.nacos.discovery.namespace=$(NACOS_NAMESPACE_ID) -Dspring.cloud.nacos.discovery.group=$(NACOS_GROUP_NAME) -Dspring.application.name=adservice-springcloud -Dspring.cloud.nacos.discovery.server-addr=nacos-test.skoala-test:8848 -Dspring.cloud.nacos.discovery.metadata.k8s_cluster_id=xxx -Dspring.cloud.nacos.discovery.metadata.k8s_cluster_name=skoala-dev -Dspring.cloud.nacos.discovery.metadata.k8s_namespace_name=skoala-test -Dspring.cloud.nacos.discovery.metadata.k8s_workload_type=deployment -Dspring.cloud.nacos.discovery.metadata.k8s_workload_name=adservice-springcloud -Dspring.cloud.nacos.discovery.metadata.k8s_service_name=adservice-springcloud -Dspring.cloud.nacos.discovery.metadata.k8s_pod_name=$(HOSTNAME)  -Dspring.cloud.sentinel.transport.dashboard=nacos-test-sentinel.skoala-test:8080"
      resources:
        limits:
          memory: 1Gi
      podAnnotations:
        instrumentation.opentelemetry.io/inject-sdk: "insight-system/insight-opentelemetry-autoinstrumentation"
        insight.opentelemetry.io/metric-scrape: "true"
        insight.opentelemetry.io/metric-path: "/"
        insight.opentelemetry.io/metric-port: "12345"

    checkoutService:
      enabled: true
      imageOverride:
        tag: "eaad6dbdbbf8dfa8b09c83b945cd09e6e68363d0-checkoutservice-v2"
      useDefault:
        env: false
      env:
        - name: CHECKOUT_SERVICE_PORT
          value: "8080"
        - name: CART_SERVICE_ADDR
          value: '{{ include "otel-demo.name" . }}-cartservice:8080'
        - name: PAYMENT_SERVICE_ADDR
          value: '{{ include "otel-demo.name" . }}-paymentservice:8080'
        - name: PRODUCT_CATALOG_SERVICE_ADDR
          value: '{{ include "otel-demo.name" . }}-productcatalogservice:8080'
        - name: SHIPPING_SERVICE_ADDR
          value: '{{ include "otel-demo.name" . }}-shippingservice:8080'
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          value: 'http://insight-agent-opentelemetry-collector.insight-system.svc.cluster.local:4317'
      podAnnotations:
        instrumentation.opentelemetry.io/inject-sdk: "insight-system/insight-opentelemetry-autoinstrumentation"
      initContainers:
        # this is use for rewrite official initContainer
        - name: dumpy
          image: docker.m.daocloud.io/busybox:1.36.0
          command: [ 'echo', 'Hello World!' ]

    frontend:
      enabled: true
      useDefault:
        env: false
      env:
        - name: FRONTEND_PORT
          value: "8080"
        - name: FRONTEND_ADDR
          value: :8080
        - name: AD_SERVICE_ADDR
          value: '{{ include "otel-demo.name" . }}-adservice:8080'
        - name: CART_SERVICE_ADDR
          value: '{{ include "otel-demo.name" . }}-cartservice:8080'
        - name: CHECKOUT_SERVICE_ADDR
          value: '{{ include "otel-demo.name" . }}-checkoutservice:8080'
        - name: CURRENCY_SERVICE_ADDR
          value: '{{ include "otel-demo.name" . }}-currencyservice:8080'
        - name: PRODUCT_CATALOG_SERVICE_ADDR
          value: '{{ include "otel-demo.name" . }}-productcatalogservice:8080'
        - name: RECOMMENDATION_SERVICE_ADDR
          value: '{{ include "otel-demo.name" . }}-recommendationservice:8080'
        - name: SHIPPING_SERVICE_ADDR
          value: '{{ include "otel-demo.name" . }}-shippingservice:8080'
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          value: 'http://insight-agent-opentelemetry-collector.insight-system.svc.cluster.local:4317'
        - name: WEB_OTEL_SERVICE_NAME
          value: frontend-web
        - name: PUBLIC_OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
          value: http://localhost:4318/v1/traces             # This expects users to use `kubectl port-forward ...`
      podAnnotations:
        instrumentation.opentelemetry.io/inject-sdk: "insight-system/insight-opentelemetry-autoinstrumentation"

    loadgenerator:
      enabled: true
      useDefault:
        env: false
      env:
        - name: LOCUST_WEB_PORT
          value: "8089"
        - name: LOCUST_USERS
          value: "10"
        - name: LOCUST_SPAWN_RATE
          value: "1"
        - name: LOCUST_HOST
          value: 'http://{{ include "otel-demo.name" . }}-frontend:8080'
        - name: LOCUST_HEADLESS
          value: "false"
        - name: LOCUST_AUTOSTART
          value: "true"
        - name: PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION
          value: python
        - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
          value: 'http://insight-agent-opentelemetry-collector.insight-system.svc.cluster.local:4318/v1/traces'
      podAnnotations:
        instrumentation.opentelemetry.io/inject-sdk: "insight-system/insight-opentelemetry-autoinstrumentation"

    paymentService:
      enabled: true
      useDefault:
        env: false
      env:
        - name: PAYMENT_SERVICE_PORT
          value: "8080"
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          value: 'http://insight-agent-opentelemetry-collector.insight-system.svc.cluster.local:4317'
      podAnnotations:
        instrumentation.opentelemetry.io/inject-sdk: "insight-system/insight-opentelemetry-autoinstrumentation"

    productCatalogService:
      enabled: true
      useDefault:
        env: false
      env:
        - name: PRODUCT_CATALOG_SERVICE_PORT
          value: "8080"
        - name: FEATURE_FLAG_GRPC_SERVICE_ADDR
          value: '{{ include "otel-demo.name" . }}-featureflagservice:50053'
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          value: 'http://insight-agent-opentelemetry-collector.insight-system.svc.cluster.local:4317'
      podAnnotations:
        instrumentation.opentelemetry.io/inject-sdk: "insight-system/insight-opentelemetry-autoinstrumentation"

    quoteService:
      enabled: true
      useDefault:
        env: false
      service:
        port: 8080
      env:
        - name: QUOTE_SERVICE_PORT
          value: "8080"
        - name: OTEL_PHP_AUTOLOAD_ENABLED
          value: "true"
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          value: 'http://insight-agent-opentelemetry-collector.insight-system.svc.cluster.local:4318'
      podAnnotations:
        instrumentation.opentelemetry.io/inject-sdk: "insight-system/insight-opentelemetry-autoinstrumentation"

    shippingService:
      enabled: true
      useDefault:
        env: false
      env:
        - name: SHIPPING_SERVICE_PORT
          value: "8080"
        - name: QUOTE_SERVICE_ADDR
          value: 'http://{{ include "otel-demo.name" . }}-quoteservice:8080'
        - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
          value: "http://insight-agent-opentelemetry-collector.insight-system.svc.cluster.local:4317"
      podAnnotations:
        instrumentation.opentelemetry.io/inject-sdk: "insight-system/insight-opentelemetry-autoinstrumentation"

    redis:
      enabled: true
      useDefault:
        env: true
      imageOverride:
        repository: "docker.m.daocloud.io/redis"

    # this component is redefined in /template/cartservice.yaml
    # cartservice deploy by /template/cartservice.yaml supports switch redis deploy style
    cartService:
      enabled: false

    accountingService:
      enabled: false

    currencyService:
      enabled: false

    emailService:
      enabled: false

    featureflagService:
      enabled: false

    frauddetectionService:
      enabled: false

    frontendProxy:
      enabled: false

    recommendationService:
      enabled: false

    ffsPostgres:
      enabled: false

    kafka:
      enabled: false

  opentelemetry-collector:
    enabled: false

  jaeger:
    enabled: false

  prometheus:
    enabled: false

  grafana:
    enabled: false

redis_operator:
  enabled: false

redis_resource:
  enabled: false
  storageClassName: openebs-hostpath
  storageSize: 1Gi
